[{"path":"https://decide-project-eu.github.io/satpoint/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 satpoint authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/articles/download-netcdf.html","id":"collecting-the-files","dir":"Articles","previous_headings":"","what":"Collecting the Files","title":"Downloading Files from Earth Data","text":"first step, may well already completed collect .nc .nc4 files wish work . example collect month precipitation data https://urs.earthdata.nasa.gov/. automate instructions provided NASA .","code":""},{"path":"https://decide-project-eu.github.io/satpoint/articles/download-netcdf.html","id":"registering-with-earthdata","dir":"Articles","previous_headings":"Collecting the Files","what":"Registering with EarthData","title":"Downloading Files from Earth Data","text":"Prior collecting files need register service, creating username password. can create .netrc .urs_cookies files recommended Earth Data Wiki.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/articles/download-netcdf.html","id":"creating-list-of-files-to-download","dir":"Articles","previous_headings":"Collecting the Files","what":"Creating List of Files to Download","title":"Downloading Files from Earth Data","text":"created files recommend create list files download. can follow steps example: Navigate https://disc.gsfc.nasa.gov/datasets/GPM_3IMERGDL_06/summary Data Access menu, click Subset / Get Data Download Method:, select “Get File Subsets using GES DISC Subsetter” Choose Date range, Region Variables. selected June, 2020 area around Scotland. example purposes variable just PrecipitationCal. Click Get Data. populate list links, take minute two. complete, download list links. leaves us file following contents, first lines shown.","code":"readLines(\"list_of_links.txt\")[1:6] #> [1] \"https://docserver.gesdisc.eosdis.nasa.gov/public/project/GPM/IMERG_ATBD_V06.pdf\"                                                                                                                                        #> [2] \"https://gpm1.gesdisc.eosdis.nasa.gov/data/GPM_L3/doc/README.GPM.pdf\"                                                                                                                                                    #> [3] \"https://gpm1.gesdisc.eosdis.nasa.gov/opendap/GPM_L3/GPM_3IMERGDL.06/2020/06/3B-DAY-L.MS.MRG.3IMERG.20200601-S000000-E235959.V06.nc4.nc4?precipitationCal[0:0][1715:1775][1452:1495],time,lon[1715:1775],lat[1452:1495]\" #> [4] \"https://gpm1.gesdisc.eosdis.nasa.gov/opendap/GPM_L3/GPM_3IMERGDL.06/2020/06/3B-DAY-L.MS.MRG.3IMERG.20200602-S000000-E235959.V06.nc4.nc4?precipitationCal[0:0][1715:1775][1452:1495],time,lon[1715:1775],lat[1452:1495]\" #> [5] \"https://gpm1.gesdisc.eosdis.nasa.gov/opendap/GPM_L3/GPM_3IMERGDL.06/2020/06/3B-DAY-L.MS.MRG.3IMERG.20200603-S000000-E235959.V06.nc4.nc4?precipitationCal[0:0][1715:1775][1452:1495],time,lon[1715:1775],lat[1452:1495]\" #> [6] \"https://gpm1.gesdisc.eosdis.nasa.gov/opendap/GPM_L3/GPM_3IMERGDL.06/2020/06/3B-DAY-L.MS.MRG.3IMERG.20200604-S000000-E235959.V06.nc4.nc4?precipitationCal[0:0][1715:1775][1452:1495],time,lon[1715:1775],lat[1452:1495]\""},{"path":"https://decide-project-eu.github.io/satpoint/articles/download-netcdf.html","id":"download-and-storing-files-using-r","dir":"Articles","previous_headings":"Collecting the Files","what":"Download and Storing Files using R","title":"Downloading Files from Earth Data","text":"can now download files. approach ’ll download files, process separately (possibly offline). also download process individual file. ’ll begin loading packages ’ll use. Note use tidyverse suite packages compulsory, just preference. can now get files download R use create list output files. Finally, can set file paths .netrc .urs_cookies files use walk2() function download file. now month’s worth files process","code":"library(tidyverse) library(httr) # to GET the files library(satpoint) # to process them later # skip the first two lines as they are general info files nc_urls <- read_lines(\"list_of_links.txt\", skip = 2)  # use a quick regular expression to create list of outputs nc_files_to_create <- str_extract(   nc_urls,   \"3B-DAY-L.MS.MRG.3IMERG.[0-9]{8}-S000000-E235959.V06.nc4\" ) # file paths netrc_path <- \".netrc\" cookie_path <- \".urs_cookies\"  # create config for GET set_config(config(followlocation = 1, netrc = 1,                     netrc_file = netrc_path,                     cookie = cookie_path,                     cookiefile = cookie_path,                     cookiejar = cookie_path))  # progress through the files and download each file walk2(nc_urls, nc_files_to_create, function(x, y) {   GET(url = x, write_disk(y, overwrite = TRUE)) }) list.files(pattern = \".nc4\") #>  [1] \"3B-DAY-L.MS.MRG.3IMERG.20200601-S000000-E235959.V06.nc4\" #>  [2] \"3B-DAY-L.MS.MRG.3IMERG.20200602-S000000-E235959.V06.nc4\" #>  [3] \"3B-DAY-L.MS.MRG.3IMERG.20200603-S000000-E235959.V06.nc4\" #>  [4] \"3B-DAY-L.MS.MRG.3IMERG.20200604-S000000-E235959.V06.nc4\" #>  [5] \"3B-DAY-L.MS.MRG.3IMERG.20200605-S000000-E235959.V06.nc4\" #>  [6] \"3B-DAY-L.MS.MRG.3IMERG.20200606-S000000-E235959.V06.nc4\" #>  [7] \"3B-DAY-L.MS.MRG.3IMERG.20200607-S000000-E235959.V06.nc4\" #>  [8] \"3B-DAY-L.MS.MRG.3IMERG.20200608-S000000-E235959.V06.nc4\" #>  [9] \"3B-DAY-L.MS.MRG.3IMERG.20200609-S000000-E235959.V06.nc4\" #> [10] \"3B-DAY-L.MS.MRG.3IMERG.20200610-S000000-E235959.V06.nc4\" #> [11] \"3B-DAY-L.MS.MRG.3IMERG.20200611-S000000-E235959.V06.nc4\" #> [12] \"3B-DAY-L.MS.MRG.3IMERG.20200612-S000000-E235959.V06.nc4\" #> [13] \"3B-DAY-L.MS.MRG.3IMERG.20200613-S000000-E235959.V06.nc4\" #> [14] \"3B-DAY-L.MS.MRG.3IMERG.20200614-S000000-E235959.V06.nc4\" #> [15] \"3B-DAY-L.MS.MRG.3IMERG.20200615-S000000-E235959.V06.nc4\" #> [16] \"3B-DAY-L.MS.MRG.3IMERG.20200616-S000000-E235959.V06.nc4\" #> [17] \"3B-DAY-L.MS.MRG.3IMERG.20200617-S000000-E235959.V06.nc4\" #> [18] \"3B-DAY-L.MS.MRG.3IMERG.20200618-S000000-E235959.V06.nc4\" #> [19] \"3B-DAY-L.MS.MRG.3IMERG.20200619-S000000-E235959.V06.nc4\" #> [20] \"3B-DAY-L.MS.MRG.3IMERG.20200620-S000000-E235959.V06.nc4\" #> [21] \"3B-DAY-L.MS.MRG.3IMERG.20200621-S000000-E235959.V06.nc4\" #> [22] \"3B-DAY-L.MS.MRG.3IMERG.20200622-S000000-E235959.V06.nc4\" #> [23] \"3B-DAY-L.MS.MRG.3IMERG.20200623-S000000-E235959.V06.nc4\" #> [24] \"3B-DAY-L.MS.MRG.3IMERG.20200624-S000000-E235959.V06.nc4\" #> [25] \"3B-DAY-L.MS.MRG.3IMERG.20200625-S000000-E235959.V06.nc4\" #> [26] \"3B-DAY-L.MS.MRG.3IMERG.20200626-S000000-E235959.V06.nc4\" #> [27] \"3B-DAY-L.MS.MRG.3IMERG.20200627-S000000-E235959.V06.nc4\" #> [28] \"3B-DAY-L.MS.MRG.3IMERG.20200628-S000000-E235959.V06.nc4\" #> [29] \"3B-DAY-L.MS.MRG.3IMERG.20200629-S000000-E235959.V06.nc4\" #> [30] \"3B-DAY-L.MS.MRG.3IMERG.20200630-S000000-E235959.V06.nc4\""},{"path":"https://decide-project-eu.github.io/satpoint/articles/satpoint.html","id":"netcdf-files-to-process","dir":"Articles","previous_headings":"","what":"netCDF files to process","title":"Package Overview","text":"unsure can obtain netCDF files please see vignette(\"Download-netcdf\", package = \"satpoint\"). use files downloaded example.","code":"nc_files <- list.files(pattern = \".nc4\") head(nc_files) #> [1] \"3B-DAY-L.MS.MRG.3IMERG.20200601-S000000-E235959.V06.nc4\" #> [2] \"3B-DAY-L.MS.MRG.3IMERG.20200602-S000000-E235959.V06.nc4\" #> [3] \"3B-DAY-L.MS.MRG.3IMERG.20200603-S000000-E235959.V06.nc4\" #> [4] \"3B-DAY-L.MS.MRG.3IMERG.20200604-S000000-E235959.V06.nc4\" #> [5] \"3B-DAY-L.MS.MRG.3IMERG.20200605-S000000-E235959.V06.nc4\" #> [6] \"3B-DAY-L.MS.MRG.3IMERG.20200606-S000000-E235959.V06.nc4\""},{"path":[]},{"path":"https://decide-project-eu.github.io/satpoint/articles/satpoint.html","id":"sites","dir":"Articles","previous_headings":"The Process","what":"Sites","title":"Package Overview","text":"satpoint package designed assist extracting values netCDF files particular areas. areas can predefined user included helper function create buffers around particular points, example locations fish farms. example construct set fake site locations, can plot just reference purposes. plot chunk site_map","code":"sites <- tibble(   site = LETTERS[1:4],   longitude = c(-5.837704, -6.592514, -7.885055, -3.421410),   latitude = c(57.607846, 57.291280, 56.900022, 58.187849) ) sites #> # A tibble: 4 x 3 #>   site  longitude latitude #>   <chr>     <dbl>    <dbl> #> 1 A         -5.84     57.6 #> 2 B         -6.59     57.3 #> 3 C         -7.89     56.9 #> 4 D         -3.42     58.2"},{"path":"https://decide-project-eu.github.io/satpoint/articles/satpoint.html","id":"creating-buffer-zones","dir":"Articles","previous_headings":"The Process","what":"Creating Buffer Zones","title":"Package Overview","text":"can now create set circular buffers around points, average values netCDF files. use site_buffers() function specify want 10km, 15km 20km buffers. , can plot buffers demonstrate created. plot chunk buffer_map Note: creating buffer zones, circular, expectation buffers data frame unique row per buffer unique identifier. case site column.","code":"buffers <- site_buffers(sites, x_coord = \"longitude\", y_coord = \"latitude\", crs = 4326, buffers = c(10, 15, 20)) buffers #> Simple feature collection with 12 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -8.218254 ymin: 56.71742 xmax: -3.076761 ymax: 58.36968 #> Geodetic CRS:  WGS 84 #> # A tibble: 12 x 2 #>    site                                                                 geometry #>    <chr>                                                          <POLYGON [B0]> #>  1 A_10  ((-5.891903 57.52217, -5.889911 57.52227, -5.889591 57.52086, -5.88759~ #>  2 B_10  ((-6.72602 57.23765, -6.725663 57.23627, -6.724667 57.23632, -6.724486~ #>  3 C_10  ((-7.840913 56.81297, -7.836937 56.81323, -7.832962 56.81348, -7.83097~ #>  4 D_10  ((-3.585398 58.16313, -3.585212 58.1618, -3.584815 58.15896, -3.58333 ~ #>  5 A_15  ((-5.655942 57.51381, -5.656095 57.51452, -5.653116 57.51465, -5.64914~ #>  6 B_15  ((-6.75816 57.19041, -6.757478 57.18778, -6.7535 57.188, -6.752773 57.~ #>  7 C_15  ((-8.071833 56.81163, -8.071189 56.80955, -8.069197 56.80967, -8.06876~ #>  8 D_15  ((-3.673967 58.16355, -3.673865 58.16284, -3.672874 58.16287, -3.67236~ #>  9 A_20  ((-5.545368 57.51908, -5.545443 57.51943, -5.541972 57.51958, -5.54257~ #> 10 B_20  ((-6.612155 57.47221, -6.612513 57.47361, -6.616525 57.4734, -6.620537~ #> 11 C_20  ((-8.182937 56.82204, -8.182502 56.82065, -8.180506 56.82079, -8.17920~ #> 12 D_20  ((-3.218432 58.33415, -3.22215 58.33405, -3.222172 58.33423, -3.22242 ~"},{"path":"https://decide-project-eu.github.io/satpoint/articles/satpoint.html","id":"extracting-the-data","dir":"Articles","previous_headings":"The Process","what":"Extracting the Data","title":"Package Overview","text":"Now buffers can use main package function extract_site_grids_nc() extract data values. ’ll one file first, demonstrate inputs messages provided help track progress. can see, must provide netCDF file process, buffers coordinate referencing system (CRS) netCDF file making use . extract_site_grids_nc() function completes following steps: open netCDF file extract date/time information file extract geographic data file establish parts file intersect provided buffers extract data netCDF file parts intersect provided buffers result tibble site, data value (example precipitationCal) datetime.","code":"extract_site_grids_nc(nc_file = nc_files[1], site_buffers = buffers, nc_crs = 4326) #> Extracting the coordinate names directly from the file #> Variable extracted from file is precipitationCal #> Processing site A_10 #> Processing site A_15 #> Processing site A_20 #> Processing site B_10 #> Processing site B_15 #> Processing site B_20 #> Processing site C_10 #> Processing site C_15 #> Processing site C_20 #> Processing site D_10 #> Processing site D_15 #> Processing site D_20 #> # A tibble: 138 x 3 #>    site  precipitationCal datetime            #>    <chr>            <dbl> <dttm>              #>  1 A_10            0      2020-06-01 00:00:00 #>  2 A_10            0      2020-06-01 00:00:00 #>  3 A_10            0      2020-06-01 00:00:00 #>  4 A_10            0      2020-06-01 00:00:00 #>  5 A_10            0      2020-06-01 00:00:00 #>  6 A_10            0      2020-06-01 00:00:00 #>  7 A_15            0.0136 2020-06-01 00:00:00 #>  8 A_15            0      2020-06-01 00:00:00 #>  9 A_15            0      2020-06-01 00:00:00 #> 10 A_15            0      2020-06-01 00:00:00 #> # i 128 more rows"},{"path":"https://decide-project-eu.github.io/satpoint/articles/satpoint.html","id":"processing-all-files","dir":"Articles","previous_headings":"The Process","what":"Processing all files","title":"Package Overview","text":"demonstrate processing multiple files, ’ll use map2_dfr() function progress input files bind results together. can summarise() results produce quick plot . plot chunk final_plot","code":"# Note that messages are hidden here to avoid a lot of repetition precip <- map_dfr(nc_files, .f = extract_site_grids_nc,                   site_buffers = buffers, nc_crs = 4326) precip #> # A tibble: 4,140 x 3 #>    site  precipitationCal datetime            #>    <chr>            <dbl> <dttm>              #>  1 A_10            0      2020-06-01 00:00:00 #>  2 A_10            0      2020-06-01 00:00:00 #>  3 A_10            0      2020-06-01 00:00:00 #>  4 A_10            0      2020-06-01 00:00:00 #>  5 A_10            0      2020-06-01 00:00:00 #>  6 A_10            0      2020-06-01 00:00:00 #>  7 A_15            0.0136 2020-06-01 00:00:00 #>  8 A_15            0      2020-06-01 00:00:00 #>  9 A_15            0      2020-06-01 00:00:00 #> 10 A_15            0      2020-06-01 00:00:00 #> # i 4,130 more rows sum_precip <- precip %>%   separate(site, into = c(\"site\", \"buffer\")) %>%   group_by(site, buffer, datetime) %>%   summarise(precipitationCal = mean(precipitationCal, na.rm = TRUE),             .groups = \"drop\")  ggplot(sum_precip, aes(x = datetime, y = precipitationCal)) +   geom_line(aes(col = buffer)) +   geom_point() +   facet_wrap(vars(site), ncol = 2)"},{"path":[]},{"path":"https://decide-project-eu.github.io/satpoint/articles/satpoint.html","id":"extracting-certain-dates","dir":"Articles","previous_headings":"Additional Options","what":"Extracting Certain Dates","title":"Package Overview","text":"example , netCDF file contained single days worth data. netCDF files can contain months years worth data. cases, date dates can provided extract_site_grids_nc() function data date(s) returned. example: particular date(s), requested dates_to_extract present data, message printed specifying missing date(s).","code":"# not run extract_site_grids_nc(nc_file = nc_files[1], site_buffers = buffers, nc_crs = 4326,                       dates_to_extract = c(\"2023-01-01\", \"2024-01-01\")) # or with a pre-defined sequence of dates date_seq <- seq.Date(as.Date(\"2023-01-01\"), as.Date(\"2023-01-04\"), by = \"day\") extract_site_grids_nc(nc_file = nc_files[1], site_buffers = buffers, nc_crs = 4326,                       dates_to_extract = date_seq)"},{"path":"https://decide-project-eu.github.io/satpoint/articles/satpoint.html","id":"providing-details-on-the-variables-to-extract","dir":"Articles","previous_headings":"Additional Options","what":"Providing details on the variables to extract","title":"Package Overview","text":"default extract_site_grids_nc() try best figure variable extract. However, can specified via Likewise, depth variable present, function try extract details automatically variable name can also extracted.","code":"extract_site_grids_nc(nc_file = nc_files[1], site_buffers = buffers, nc_crs = 4326,                       nc_var_name = \"precipitationCal\") #> # A tibble: 138 x 3 #>    site  precipitationCal datetime            #>    <chr>            <dbl> <dttm>              #>  1 A_10            0      2020-06-01 00:00:00 #>  2 A_10            0      2020-06-01 00:00:00 #>  3 A_10            0      2020-06-01 00:00:00 #>  4 A_10            0      2020-06-01 00:00:00 #>  5 A_10            0      2020-06-01 00:00:00 #>  6 A_10            0      2020-06-01 00:00:00 #>  7 A_15            0.0136 2020-06-01 00:00:00 #>  8 A_15            0      2020-06-01 00:00:00 #>  9 A_15            0      2020-06-01 00:00:00 #> 10 A_15            0      2020-06-01 00:00:00 #> # i 128 more rows # not run extract_site_grids_nc(nc_file = nc_files[1], site_buffers = buffers, nc_crs = 4326,                       nc_var_name = \"precipitationCal\", depth_var = \"Depth\")"},{"path":"https://decide-project-eu.github.io/satpoint/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Duncan. Author, maintainer.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Duncan (2023). satpoint: Automates Extraction Information NETCDF Files. R package version 0.1.0, https://decide-project-eu.github.io/satpoint/.","code":"@Manual{,   title = {satpoint: Automates Extraction Of Information From NETCDF Files},   author = {Andrew Duncan},   year = {2023},   note = {R package version 0.1.0},   url = {https://decide-project-eu.github.io/satpoint/}, }"},{"path":"https://decide-project-eu.github.io/satpoint/index.html","id":"satpoint","dir":"","previous_headings":"","what":"Automates Extraction Of Information From NETCDF Files","title":"Automates Extraction Of Information From NETCDF Files","text":"goal satpoint allows users automatically extract data netCDF file specific geographical area aide automatic processing multiple netCDF files.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automates Extraction Of Information From NETCDF Files","text":"can install development version satpoint GitHub : install dependencies required.","code":"# install.packages(\"devtools\") devtools::install_github(\"decide-project-eu/satpoint\")"},{"path":"https://decide-project-eu.github.io/satpoint/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Automates Extraction Of Information From NETCDF Files","text":"package makes use existing ncdf4 package open extract data netCDF files tries simplify required interface users, particularly trying extract data geographic area - average across. full worked example processing one netCDF files, please see Processing netCDF files article fully worked example.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/index.html","id":"collecting-netcdf-files-for-analysis","dir":"","previous_headings":"","what":"Collecting netCDF files for analysis","title":"Automates Extraction Of Information From NETCDF Files","text":"present package contain functions download/collect netCDF files common data repositories. However, assist users new using R work type data put together article NASA EARTHDATA data repository.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract all date or datetimes from an open netCDF file. — extract_dates","title":"Extract all date or datetimes from an open netCDF file. — extract_dates","text":"Extract date datetimes open netCDF file.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract all date or datetimes from an open netCDF file. — extract_dates","text":"","code":"extract_dates(nc_obj, time_var_name = \"time\")"},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract all date or datetimes from an open netCDF file. — extract_dates","text":"nc_obj Open netCDF file retrieve time data time_var_name Name time/date variable extract netCDF file. Defaults \"time\" far common variable name used.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract all date or datetimes from an open netCDF file. — extract_dates","text":"Vector date datetimes extracted netCDF file.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract all date or datetimes from an open netCDF file. — extract_dates","text":"","code":"if (FALSE) {  # open the netCDF file  the_nc_obj <- ncdf4::nc_open(\"path/to/netCDF/file.nc\")   # extract all datetimes from the file  extract_dates(the_nc_obj)   # or if the date/time variable has a different name  extract_dates(the_nc_obj, \"datetime\") }"},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_geos.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract all geographical coordinates from a netCDF file and convert to simple\n  features object. — extract_geos","title":"Extract all geographical coordinates from a netCDF file and convert to simple\n  features object. — extract_geos","text":"Extract geographical coordinates netCDF file convert simple   features object.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_geos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract all geographical coordinates from a netCDF file and convert to simple\n  features object. — extract_geos","text":"","code":"extract_geos(nc_obj, orig_crs, crs = NULL, name_x = \"\", name_y = \"\")"},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_geos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract all geographical coordinates from a netCDF file and convert to simple\n  features object. — extract_geos","text":"nc_obj Open netCDF file retrieve time data . orig_crs Numerical value crs used netCDF file. crs Numerical value crs change results , different original crs. name_x Name geographical x coordinate extracted. specified, attempt made establish netCDF file . name_y Name geographical y coordinate extracted. specified, attempt made establish netCDF file .","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_geos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract all geographical coordinates from a netCDF file and convert to simple\n  features object. — extract_geos","text":"Special features data frame containing geographic coordinates   provided netCDF file.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_geos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract all geographical coordinates from a netCDF file and convert to simple\n  features object. — extract_geos","text":"","code":"if (FALSE) {  # open the netCDF file  the_nc_obj <- ncdf4::nc_open(\"path/to/netCDF/file.nc\")   # extract all spatial points from the netCDF file  extract_geos(the_nc_obj, crs = 4326)   # if the names of the spatial coordindates aren't picked up automatically  extract_geos(the_nc_obj, crs = 4326, name_x = \"x\", name_y = \"y\") }"},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_site_grids_nc.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract all variable values from netCDF file for all provided geographical locations. — extract_site_grids_nc","title":"Extract all variable values from netCDF file for all provided geographical locations. — extract_site_grids_nc","text":"Extract variable values netCDF file provided geographical locations.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_site_grids_nc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract all variable values from netCDF file for all provided geographical locations. — extract_site_grids_nc","text":"","code":"extract_site_grids_nc(   nc_file,   site_buffers,   nc_crs,   sites_crs = NULL,   depth_var = \"depth\",   id = \"site\",   nc_var_name = NULL,   dates_to_extract = NULL,   time_var_name = \"time\",   grid_name_x = \"\",   grid_name_y = \"\" )"},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_site_grids_nc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract all variable values from netCDF file for all provided geographical locations. — extract_site_grids_nc","text":"nc_file Filepath netCDF file extract data . site_buffers Simple features (spatial) data frame geographical areas extract variable values . data frame contain single row per buffer unique identifier. nc_crs numerical value crs netCDF file. sites_crs numerical value crs site_buffers, different crs netCDF file. depth_var name depth variable, necessary, used netCDF file. Defaults \"depth\". id name identifier provided site_buffers special features data frame. nc_var_name name variable netCDF file focus extraction. specified, attempt made establish netCDF file . dates_to_extract Vector dates extract variable . provided, available values returned. time_var_name Name time/date variable extract netCDF file. Defaults \"time\" far common variable name used. grid_name_x Name geographical x coordinate extracted. specified, attempt made establish netCDF file . grid_name_y Name geographical y coordinate extracted. specified, attempt made establish netCDF file .","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_site_grids_nc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract all variable values from netCDF file for all provided geographical locations. — extract_site_grids_nc","text":"tibble location id, corresponding variable values   depths dates available.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/extract_site_grids_nc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract all variable values from netCDF file for all provided geographical locations. — extract_site_grids_nc","text":"","code":"if (FALSE) {   the_nc_file <- \"path/to/netCDF/file.nc\"   # presuming we already have a set of spatial buffers to collect data  # from  extract_site_grids_nc(the_nc_file, site_buffers = buffers, nc_crs = 4326) }"},{"path":"https://decide-project-eu.github.io/satpoint/reference/filter_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to assist the user in extracting only particular dates\nfrom the results of a netCDF file. — filter_dates","title":"Internal function to assist the user in extracting only particular dates\nfrom the results of a netCDF file. — filter_dates","text":"Internal function assist user extracting particular dates results netCDF file.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/filter_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to assist the user in extracting only particular dates\nfrom the results of a netCDF file. — filter_dates","text":"","code":"filter_dates(all_nc_data, dates_to_extract)"},{"path":"https://decide-project-eu.github.io/satpoint/reference/filter_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to assist the user in extracting only particular dates\nfrom the results of a netCDF file. — filter_dates","text":"all_nc_data Data frame containing results extracted netCDF file. dates_to_extract Vector dates extracted.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/filter_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to assist the user in extracting only particular dates\nfrom the results of a netCDF file. — filter_dates","text":"Data frame containing results filtered date.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/get_nc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to extract the variable values from an open netCDF file. — get_nc_data","title":"Internal function to extract the variable values from an open netCDF file. — get_nc_data","text":"Internal function extract variable values open netCDF file.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/get_nc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to extract the variable values from an open netCDF file. — get_nc_data","text":"","code":"get_nc_data(   ind.x,   ind.y,   nc_obj,   depth_vals,   nc_var,   nc_times,   site,   swap_ind = FALSE )"},{"path":"https://decide-project-eu.github.io/satpoint/reference/get_nc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to extract the variable values from an open netCDF file. — get_nc_data","text":"ind.x Index geographic x coordinate start variable extraction . ind.y Index geographic y coordinate start variable extraction . nc_obj Open netCDF file extract data . depth_vals depth values (present) match extracted data . nc_var Name variable contained netCDF file. nc_times Vector times contained netCDF file match extracted data. site Name location values attached . swap_ind Boolean identifier whether change order x, y indices.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/get_nc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to extract the variable values from an open netCDF file. — get_nc_data","text":"Tibble variable values, times depths extracted   provided netCDF file.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/satpoint-package.html","id":null,"dir":"Reference","previous_headings":"","what":"satpoint: Automates Extraction Of Information From NETCDF Files — satpoint-package","title":"satpoint: Automates Extraction Of Information From NETCDF Files — satpoint-package","text":"satpoint package designed make extracting information NetCDF files specific geographic locations easy possible. provide geographic data NetCDF file, satpoint extract variable data automatically.","code":""},{"path":[]},{"path":"https://decide-project-eu.github.io/satpoint/reference/satpoint-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"satpoint: Automates Extraction Of Information From NETCDF Files — satpoint-package","text":"Maintainer: Andrew Duncan Andrew.Duncan@sruc.ac.uk","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/site_buffers.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates circular buffers around site locations to allow for different\nspatial averaging to occur when the values are extracted from a netCDF file. — site_buffers","title":"Creates circular buffers around site locations to allow for different\nspatial averaging to occur when the values are extracted from a netCDF file. — site_buffers","text":"Creates circular buffers around site locations allow different spatial averaging occur values extracted netCDF file.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/site_buffers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates circular buffers around site locations to allow for different\nspatial averaging to occur when the values are extracted from a netCDF file. — site_buffers","text":"","code":"site_buffers(   site_df,   x_coord,   y_coord,   crs,   buffers,   unite = TRUE,   id = \"site\" )"},{"path":"https://decide-project-eu.github.io/satpoint/reference/site_buffers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates circular buffers around site locations to allow for different\nspatial averaging to occur when the values are extracted from a netCDF file. — site_buffers","text":"site_df Data frame locations create buffers . presumption location (x, y) coordinates separate columns identifier. x_coord name data frame column details x coordinate geographical location. y_coord name data frame column details y coordinate geographical location. crs numerical value used creation geographical buffer zones. match form coordinates provided data frame. buffers radius buffers created km. unite Whether unit identifier location buffer. Defaults TRUE creates unique location/buffer per row used extract_site_grids_nc. id column name details location identifier. Defaults \"site\".","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/site_buffers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates circular buffers around site locations to allow for different\nspatial averaging to occur when the values are extracted from a netCDF file. — site_buffers","text":"Special features data frame original data frame's column,   plus geometry column identifying circular buffers around   individual locations.","code":""},{"path":"https://decide-project-eu.github.io/satpoint/reference/site_buffers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates circular buffers around site locations to allow for different\nspatial averaging to occur when the values are extracted from a netCDF file. — site_buffers","text":"","code":"# create data frame of sites sites <- tibble::tibble(   site = LETTERS[1:4],   longitude = c(-5.837704, -6.592514, -7.885055, -3.421410),   latitude = c(57.607846, 57.291280, 56.900022, 58.187849) )  # create 10km, 15km and 20km buffers around the sites site_buffers(sites, x_coord = \"longitude\", y_coord = \"latitude\",              crs = 4326, buffers = c(10, 15, 20)) #> Simple feature collection with 12 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -8.218254 ymin: 56.71742 xmax: -3.076761 ymax: 58.36968 #> Geodetic CRS:  WGS 84 #> # A tibble: 12 × 2 #>    site                                                                 geometry #>    <chr>                                                           <POLYGON [°]> #>  1 A_10  ((-5.891903 57.52217, -5.889911 57.52227, -5.889591 57.52086, -5.88759… #>  2 B_10  ((-6.72602 57.23765, -6.725663 57.23627, -6.724667 57.23632, -6.724486… #>  3 C_10  ((-7.840913 56.81297, -7.836937 56.81323, -7.832962 56.81348, -7.83097… #>  4 D_10  ((-3.585398 58.16313, -3.585212 58.1618, -3.584815 58.15896, -3.58333 … #>  5 A_15  ((-5.655942 57.51381, -5.656095 57.51452, -5.653116 57.51465, -5.64914… #>  6 B_15  ((-6.75816 57.19041, -6.757478 57.18778, -6.7535 57.188, -6.752773 57.… #>  7 C_15  ((-8.071833 56.81163, -8.071189 56.80955, -8.069197 56.80967, -8.06876… #>  8 D_15  ((-3.673967 58.16355, -3.673865 58.16284, -3.672874 58.16287, -3.67236… #>  9 A_20  ((-5.545368 57.51908, -5.545443 57.51943, -5.541972 57.51958, -5.54257… #> 10 B_20  ((-6.612155 57.47221, -6.612513 57.47361, -6.616525 57.4734, -6.620537… #> 11 C_20  ((-8.182937 56.82204, -8.182502 56.82065, -8.180506 56.82079, -8.17920… #> 12 D_20  ((-3.218432 58.33415, -3.22215 58.33405, -3.222172 58.33423, -3.22242 …"}]
